# Azure DevOps Pipeline: Build, Push, and Verify Docker Image (SP-only, Docker@2)
trigger:
- master

variables:
  # Azure Container Registry (ACR)
  containerRegistry: 'aksdevopsacr1.azurecr.io'
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: '$(Build.SourcesDirectory)/Git-Repository-files/Dockerfile'
  dockerBuildContext: '$(Build.SourcesDirectory)/Git-Repository-files'
  tag: '$(Build.BuildId)'

  # Azure subscription service connection
  azureSubscription: 'AzureDevOps-Subscription-01'

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:

    # -----------------------------
    # 0. Ensure SP has ACR access
    # -----------------------------
    - task: AzureCLI@2
      displayName: 'Assign AcrPull/AcrPush Roles Automatically'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Detecting Service Principal and Subscription..."
          SP_APP_ID=$(az account show --query user.name -o tsv)
          SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          
          echo "SP AppId detected: $SP_APP_ID"
          echo "Subscription ID detected: $SUBSCRIPTION_ID"

          acrName=$(echo "$(containerRegistry)" | cut -d '.' -f1)
          echo "ACR Name detected: $acrName"

          # Get ACR resource ID
          ACR_ID=$(az acr show --name $acrName --subscription $SUBSCRIPTION_ID --query id -o tsv)
          if [ -z "$ACR_ID" ]; then
            echo "Error: Could not find ACR $acrName in subscription $SUBSCRIPTION_ID"
            exit 1
          fi

          # Assign AcrPull role
          echo "Assigning AcrPull role..."
          az role assignment create --assignee $SP_APP_ID --role AcrPull --scope $ACR_ID || true

          # Assign AcrPush role
          echo "Assigning AcrPush role..."
          az role assignment create --assignee $SP_APP_ID --role AcrPush --scope $ACR_ID || true

          # Verify assignments
          echo "Verifying role assignments..."
          az role assignment list --assignee $SP_APP_ID --scope $ACR_ID --output table
          echo "âœ… Service Principal now has pull/push access to ACR: $acrName"

    # -----------------------------
    # 1. List local Docker images
    # -----------------------------
    - script: docker images
      displayName: List Docker Images

    # -----------------------------
    # 2. Build and Push Docker image using Docker@2
    # -----------------------------
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: $(azureSubscription) # Uses the SP in the service connection
        repository: $(imageRepository)
        command: buildAndPush
        Dockerfile: $(dockerfilePath)
        buildContext: $(dockerBuildContext)
        tags: |
          $(tag)
          latest

    # -----------------------------
    # 3. Verify image exists in ACR
    # -----------------------------
    - task: AzureCLI@2
      displayName: Verify Docker Image in ACR
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          acrName=$(echo "$(containerRegistry)" | cut -d '.' -f1)
          echo ">>> Checking repository $(imageRepository) for pushed tags..."
          tags=$(az acr repository show-tags --name $acrName --repository $(imageRepository) --output tsv)

          echo ">>> Found tags: $tags"
          if [[ ! " $tags " =~ " $(tag) " ]]; then
              echo ">>> ERROR: Image $(imageRepository):$(tag) not found in ACR!"
              exit 1
          fi
          echo ">>> Image $(imageRepository):$(tag) verified successfully."
