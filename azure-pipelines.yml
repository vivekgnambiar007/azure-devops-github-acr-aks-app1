# Azure DevOps Pipeline: Build, Push, Verify Docker Image
trigger:
- master

variables:
  # Azure Container Registry (ACR)
  containerRegistry: 'aksdevopsacr1.azurecr.io'
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: '$(Build.SourcesDirectory)/Git-Repository-files/Dockerfile'
  dockerBuildContext: '$(Build.SourcesDirectory)/Git-Repository-files'
  tag: '$(Build.BuildId)'

  # Azure subscription service connection
  azureSubscription: 'AzureDevOps-Subscription-01'

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:
    # 1. List local Docker images
    - script: docker images
      displayName: List Docker Images

    # 2. Build Docker image
    - script: |
        docker build \
          -t $(containerRegistry)/$(imageRepository):$(tag) \
          -t $(containerRegistry)/$(imageRepository):latest \
          -f $(dockerfilePath) \
          $(dockerBuildContext)
      displayName: Build Docker Image

    # 3b. Fallback: Login to ACR using inline credentials
    - script: |
        echo ">>> Attempting ACR login via hardcoded credentials..."
        echo "pRlfy8/MSjkU+myjis8s1JRKuVgB9thgR0wety+bBQ+ACRBFXJvf" | \
          docker login aksdevopsacr1.azurecr.io \
          --username aksdevopsacr1 \
          --password-stdin \
          && echo ">>> Docker login SUCCESS" || echo ">>> Docker login FAILED"
      displayName: Docker Login to ACR (Fallback - Inline Creds)

    # 4. Push Docker image to ACR
    - script: |
        echo ">>> Pushing image with tag: $(tag)"
        docker push $(containerRegistry)/$(imageRepository):$(tag)

        echo ">>> Pushing image with tag: latest"
        docker push $(containerRegistry)/$(imageRepository):latest
      displayName: Push Docker Image to ACR

    # 5. Verify image exists in ACR
    - task: AzureCLI@2
      displayName: Verify Docker Image in ACR
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          acrName=$(echo "$(containerRegistry)" | cut -d '.' -f1)
          echo ">>> Checking repository $(imageRepository) for pushed tags..."
          tags=$(az acr repository show-tags --name $acrName --repository $(imageRepository) --output tsv)

          echo ">>> Found tags: $tags"
          if [[ ! " $tags " =~ " $(tag) " ]]; then
              echo ">>> ERROR: Image $(imageRepository):$(tag) not found in ACR!"
              exit 1
          fi
          echo ">>> Image $(imageRepository):$(tag) verified successfully."
