# Azure DevOps Pipeline: Build, Push, and Verify Docker Image to ACR

trigger:
- master

variables:
  # Azure Container Registry (ACR)
  containerRegistry: 'AzureDevOps-Subscription-01'   # <-- Service connection name
  containerRegistry1: 'aksdevopsacr1'
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: '$(Build.SourcesDirectory)/Git-Repository-files/Dockerfile'
  dockerBuildContext: '$(Build.SourcesDirectory)/Git-Repository-files'
  tag: '$(Build.BuildId)'

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:

    # -----------------------------
    # 1. Build & Push with Docker@2
    # -----------------------------
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: $(containerRegistry1)   # Service connection, not registry URL
        repository: $(imageRepository)
        command: buildAndPush
        Dockerfile: $(dockerfilePath)
        buildContext: $(dockerBuildContext)
        tags: |
          $(tag)
          latest

    # -----------------------------
    # 2. Verify image exists in ACR
    # -----------------------------
    - task: AzureCLI@2
      displayName: Verify Docker Image in ACR
      inputs:
        azureSubscription: $(containerRegistry)   # reuse the same service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          acrName=$(az acr list --query "[0].name" -o tsv)  # resolve registry from connection
          echo "üîç Checking repository $(imageRepository) for pushed tags..."

          tags=$(az acr repository show-tags \
                  --name $acrName \
                  --repository $(imageRepository) \
                  --output tsv)

          echo ">>> Found tags: $tags"
          if [[ ! " $tags " =~ " $(tag) " ]]; then
              echo "‚ùå ERROR: Image $(imageRepository):$(tag) not found in ACR!"
              exit 1
          fi

          echo "‚úÖ Image $(imageRepository):$(tag) verified successfully."
