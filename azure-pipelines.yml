# Azure DevOps Pipeline: Build, Push, Verify Docker Image (OIDC via Bash)
trigger:
- master

variables:
  # Azure Container Registry (ACR)
  containerRegistry: 'aksdevopsacr1.azurecr.io'
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: '$(Build.SourcesDirectory)/Git-Repository-files/Dockerfile'
  dockerBuildContext: '$(Build.SourcesDirectory)/Git-Repository-files'
  tag: '$(Build.BuildId)'

  # Service Principal OIDC details
  tenantId: 'c160a942-c869-429f-8a96-f8c8296d57db'   # Your tenant ID
  appId: '2e4d372b-9ed2-48a7-af46-3a20d47866c1'       # Your service principal/app registration

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:
    # 1. List local Docker images
    - script: docker images
      displayName: List Docker Images

    # 2. Build Docker image
    - script: |
        docker build \
          -t $(containerRegistry)/$(imageRepository):$(tag) \
          -t $(containerRegistry)/$(imageRepository):latest \
          -f $(dockerfilePath) \
          $(dockerBuildContext)
      displayName: Build Docker Image

    # 3. Login to Azure via OIDC and ACR
    - bash: |
        echo "Logging in to Azure via OIDC..."
        # Use federated token from pipeline
        az login --service-principal \
          --tenant $(tenantId) \
          --username $(appId) \
          --federated-token $AZURE_FEDERATED_TOKEN

        echo "Logging in to ACR..."
        az acr login --name $(containerRegistry | cut -d '.' -f1)
      displayName: Login to Azure & ACR via OIDC

    # 4. Push Docker image to ACR
    - script: |
        docker push $(containerRegistry)/$(imageRepository):$(tag)
        docker push $(containerRegistry)/$(imageRepository):latest
      displayName: Push Docker Image to ACR

    # 5. Verify image exists in ACR
    - bash: |
        echo "Checking for tags in repository $(imageRepository)..."
        tags=$(az acr repository show-tags --name $(containerRegistry | cut -d '.' -f1) --repository $(imageRepository) --output tsv)

        echo "Found tags: $tags"
        if [[ ! " $tags " =~ " $(tag) " ]]; then
            echo "ERROR: Image $(imageRepository):$(tag) not found in ACR!"
            exit 1
        fi
        echo "Image $(imageRepository):$(tag) verified successfully."
      displayName: Verify Docker Image in ACR
