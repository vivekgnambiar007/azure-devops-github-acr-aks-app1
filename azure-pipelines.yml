# Azure DevOps Pipeline: Build, Push, Verify Docker Image
trigger:
- master

variables:
  # Azure Container Registry (ACR)
  containerRegistry: 'aksdevopsacr1.azurecr.io'
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: '$(Build.SourcesDirectory)/Git-Repository-files/Dockerfile'
  tag: '$(Build.BuildId)'

  # Docker service connection (Push & Pull)
  dockerRegistryServiceConnection: '4650bbd6-f888-4909-85e3-55678c2a9d93'

  # Azure subscription service connection (manual SP with tenant ID)
  azureSubscription: 'AzureDevOps-Subscription-01'  # Replace with your manual service connection name

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:
    # 1. List local Docker images
    - script: docker images
      displayName: List Docker Images

    # 2. Build and push Docker image to ACR
    - task: Docker@2
      displayName: Build and push Docker image
      inputs:
        command: buildAndPush
        repository: '$(containerRegistry)/$(imageRepository)'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    # 3. Verify the image exists in ACR
    - task: AzureCLI@2
      displayName: Verify image in ACR
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Logging in to ACR..."
          az acr login --name $(containerRegistry | cut -d '.' -f1)
          
          echo "Checking for tags in repository $(imageRepository)..."
          tags=$(az acr repository show-tags --name $(containerRegistry | cut -d '.' -f1) --repository $(imageRepository) --output tsv)

          echo "Found tags: $tags"
          if [[ ! " $tags " =~ " $(tag) " ]]; then
              echo "ERROR: Image $(imageRepository):$(tag) not found in ACR!"
              exit 1
          fi
          echo "Image $(imageRepository):$(tag) verified successfully."
