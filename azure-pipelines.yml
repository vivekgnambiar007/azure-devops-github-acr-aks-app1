# Azure DevOps Pipeline: Build, Push, and Verify Docker Image to ACR

trigger:
- master

variables:
  # Azure Container Registry (ACR)
  acrName: 'aksdevopsacr1'
  dockerRegistryServiceConnection: 'aksdevopsacr1'   # Docker registry service connection
  imageRepository: 'vivekgnambiarazuredevopsgithubacraksapp'
  dockerfilePath: 'Git-Repository-files/Dockerfile'   # relative path in repo
  dockerBuildContext: 'Git-Repository-files'
  tag: '$(Build.BuildId)'

  # Agent VM
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, Push, and Verify Docker Image
  jobs:
  - job: Build
    displayName: Docker Build & Push
    pool:
      vmImage: $(vmImageName)
    steps:

    # -----------------------------
    # 1. Enable system diagnostics for debugging
    # -----------------------------
    - script: |
        echo "##[debug] Enabling system diagnostics"
        echo "##vso[task.debug]true"
      displayName: 'Enable System Diagnostics'

    # -----------------------------
    # 2. Login to Azure & ACR using SPN
    # -----------------------------
    - task: AzureCLI@2
      displayName: 'Login to ACR using Service Principal'
      inputs:
        azureSubscription: 'AzureDevOps-Subscription-01'   # AzureRM service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "üîë Logging in to ACR..."
          az acr login --name $(acrName)
          echo "‚úÖ Logged in to ACR $(acrName) successfully"

    # -----------------------------
    # 3. Build & Push Docker Image
    # -----------------------------
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)  # Docker registry service connection
        repository: $(imageRepository)
        command: buildAndPush
        Dockerfile: $(dockerfilePath)
        buildContext: $(dockerBuildContext)
        tags: |
          $(tag)
          latest
        addPipelineData: true

    # -----------------------------
    # 4. Verify image exists in ACR
    # -----------------------------
    - task: AzureCLI@2
      displayName: Verify Docker Image in ACR
      inputs:
        azureSubscription: 'AzureDevOps-Subscription-01'   # AzureRM service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          echo "üîç Checking repository $(imageRepository) for pushed tags..."
          tags=$(az acr repository show-tags --name $(acrName) --repository $(imageRepository) --output tsv)
          echo ">>> Found tags: $tags"

          if [[ ! " $tags " =~ " $(tag) " ]]; then
              echo "‚ùå ERROR: Image $(imageRepository):$(tag) not found in ACR!"
              exit 1
          fi

          echo "‚úÖ Image $(imageRepository):$(tag) verified successfully."
